{% set version = "3.5.2" %}
{% set posix = 'm2-' if win else '' %}

package:
  name: libffi
  version: {{ version }}

source:
  url: https://github.com/libffi/libffi/releases/download/v{{ version }}/libffi-{{ version }}.tar.gz
  sha256: f3a3082a23b37c293a4fcd1053147b371f2ff91fa7ea1b2a52e335676bac82dc
  patches:
    - 0001-arm64-use-a-dedicated-dylib-for-trampolines-so-it-ca.patch
    - 0002-Add-support-for-ffi_find_closure_for_code_np-on-Appl.patch
    # Windows-specific:
    - 0004-Don-t-define-FFI_COMPLEX_TYPEDEF-ifndef-FFI_TARGET_H.patch  # [win]

build:
  number: 0
  run_exports:
    # good history: https://abi-laboratory.pro/tracker/timeline/libffi/
    - {{ pin_subpackage('libffi', max_pin="x.x") }}

requirements:
  build:
    - autotools_clang_conda  # [win]
    - make                   # [unix]
    - autoconf               # [unix]
    - libtool                # [unix]
    - patch                  # [unix]
    - automake <1.17         # [unix]
    - {{ posix }}texinfo
    - {{ compiler('c') }}
    - {{ stdlib('c') }}
  host:
  run:

test:
  requires:
    - llvm-tools  # [win]
    - m2-grep     # [win]
  commands:
    - test -e $PREFIX/lib/libffi${SHLIB_EXT}                                # [not win]
    - test -e $PREFIX/lib/libffi.a                                          # [not win]
    - test -e $PREFIX/include/ffi.h                                         # [not win]
    - test -e $PREFIX/include/ffitarget.h                                   # [not win]
    - if not exist %LIBRARY_PREFIX%/bin/ffi-8.dll exit /b 1                 # [win]
    - if not exist %LIBRARY_PREFIX%/lib/libffi.lib exit /b 1                # [win]
    - if not exist %LIBRARY_PREFIX%/lib/ffi.lib exit /b 1                   # [win]
    - if not exist %LIBRARY_PREFIX%/include/ffi.h exit /b 1                 # [win]
    - if not exist %LIBRARY_PREFIX%/include/ffitarget.h exit /b 1           # [win]
    - llvm-nm %LIBRARY_PREFIX%/lib/libffi.lib | grep "__imp_ffi_type_void"  # [win]

about:
  home: https://sourceware.org/libffi/
  license: MIT
  license_file: LICENSE
  summary: A Portable Foreign Function Interface Library.

  description: |
    The libffi library provides a portable, high level programming interface
    to various calling conventions. This allows a programmer to call any
    function specified by a call interface description at run-time.
  doc_url: https://sourceware.org/libffi/
  dev_url: https://github.com/libffi/libffi

extra:
  recipe-maintainers:
    - stefan-balke
    - scopatz
    - isuruf
